<?php
// $Id$

/**
 * @file
 * maestro.module
 */

include_once './' . drupal_get_path('module', 'maestro') . '/maestro.class.php';
include_once './' . drupal_get_path('module', 'maestro') . '/maestro_tasks.class.php';

function maestro_menu() {
  $items = array();

  $items['maestro/taskconsole'] = array(
    'title' => 'Task Console',
    'page callback' => 'maestro_taskconsole',
    'access callback' => 'user_access',
    'access arguments' => array('maestro taskconsole'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['maestro/cleanqueue'] = array(
    'title' => 'Maestro CleanQueue',
    'page callback' => 'maestro_cleanqueue',
    'access callback' => TRUE,
  );

  $items['maestro/test'] = array(
    'title' => 'Maestro Test Workflow',
    'page callback' => 'maestro_enginetest',
    'access callback' => TRUE,
  );

  $items['admin/structure/maestro'] = array(
    'title' => 'Maestro Workflows',
    'description' => 'Define and administer workflows.',
    'page callback' => 'maestro_admin',
    'access arguments' => array('maestro admin'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'maestro.admin.inc'
  );

  $items['admin/structure/maestro/ajax'] = array(
    'page callback' => 'maestro_handle_ajax_request',
    'type' => MENU_CALLBACK,
    'access arguments' => array('maestro admin'),
    'file' => 'maestro.admin.inc'
  );

  $items['admin/structure/maestro/new'] = array(
    'title' => 'New',
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/structure/maestro/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'maestro_edit_workflow',
    'access arguments' => array('maestro admin'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'maestro.admin.inc'
  );

  $items['maestro_enginetest'] = array(
    'title' => 'Execute Development Test',
    'page callback' => 'maestro_enginetest',
    'page arguments' => array(),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file'  => 'lib-test.php',
  );

  $items['maestro_runengine'] = array(
    'title' => 'Execute Development Test',
    'page callback' => 'maestro_runengine',
    'page arguments' => array(),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file'  => 'lib-test.php',
  );

  $items['admin/config/workflow/maestro_configure'] = array(
    'title' => 'Maestro Config',
    'description' => 'Configure the Maestro Engine.',
    'page callback' => 'maestro_configure',
    'access arguments' => array('maestro admin'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'maestro.admin.inc'
  );

  return $items;
}


function maestro_permission() {
  return array(
    'maestro taskconsole'  => array(
      'title' => t('Access Maestro Task Console')
    ),
    'maestro admin' => array(
      'title' => t('Administer Maestro workflows')
    )
  );
}

function maestro_help($path, $arg) {
  $output = '';

  switch ($path) {
  case "admin/help#maestro":
    $output = '<p>' . t("Define and administer workflows.") .'</p>';
    break;
  }
  return $output;
}

function maestro_theme() {
  return array(
    'maestro_taskconsole' => array(
      'template' => 'theme/maestro-taskconsole',
      'variables' => array('tasks' => NULL),
    ),
    'maestro_workflow_list' => array(
      'template' => 'theme/maestro-workflow-list',
      'render element' => 'maestro_workflows'
    ),
    'maestro_workflow_list_item' => array(
      'template' => 'theme/maestro-workflow-list-item',
      'render element' => 'maestro_workflow_template'
    ),
    'maestro_workflow_edit' => array(
      'template' => 'theme/maestro-workflow-edit',
      'variables' => array('tid' => NULL)
    ),
    'maestro_workflow_edit_tasks' => array(
      'template' => 'theme/maestro-workflow-edit-tasks',
      'variables' => array('tid' => NULL)
    ),
    'maestro_task_start' => array(
      'template' => 'theme/tasks/maestro-task-start',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_end' => array(
      'template' => 'theme/tasks/maestro-task-end',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_if' => array(
      'template' => 'theme/tasks/maestro-task-if',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_batch' => array(
      'template' => 'theme/tasks/maestro-task-batch',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_set_process_variable' => array(
      'template' => 'theme/tasks/maestro-task-set-process-variable',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_interactive_function' => array(
      'template' => 'theme/tasks/maestro-task-interactive-function',
      'variables' => array('tdid' => NULL)
    ),
  );
}


/**
 * Display of the Task Console - called from hook_menu callback.
 */
function maestro_taskconsole() {
  global $base_url, $base_path, $user;

  $modulepath = drupal_get_path('module', 'maestro');
  drupal_set_breadcrumb('');
  return theme('maestro_taskconsole');

}


function maestro_block_info() {
  $blocks['maestro']['info'] = t('Maestro Task Console');
  $blocks['maestro']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function maestro_block_view($delta = '') {
  global $user;

  $maestro = Maestro::createMaestroObject(1);    // Initiate the processing of all tasks of type 1.x
  $maestro->engine()->setDebug(TRUE);
  $block = array();
  if (user_access('access content')) {
    $maestro->engine()->getQueue();
    $block['subject'] = t('Maestro Task Listing Block');
    $tasks = $maestro->engine()->_userTaskList;
    $numtasks = count($tasks['id']);
    $content = '<table><tr><th>ID</th><th>Template</th><th>Taskname</th><th>Tasktype</th></tr>';
    for ($i=0;$i<$numtasks;$i++) {
      $content .= '<tr><td>' . $tasks['id'][$i] . '</td>';
      $content .= '<td>' . $tasks['template'][$i] . '</td>';
      $content .= '<td>' . $tasks['taskname'][$i] . '</td>';
      $content .= '<td>' . $tasks['tasktype'][$i] . '</td>';
      $content .= '</tr>';
    }
    $content .= '</table>';
    $block['content'] = $content;
  }
  return $block;

}


function maestro_cleanqueue() {
  global $base_url;
  $maestro = Maestro::createMaestroObject(1);    // Initiate the processing of all tasks of type 1.x
  $maestro->engine()->cleanQueue();
  $maestro->engine()->setProcessVariable('initiator',1);
  drupal_set_message("Maestro Clean Queue Completed");
  drupal_goto($base_url);
}

function maestro_enginetest() {
  global $base_url;
  $options = array('color1' => 'red');    // Example array for options - structure TBD.
  $maestro = Maestro::createMaestroObject(1,$options);    // Initiate the processing of all tasks of type 1.x
  $template = 1;
  $newprocess = $maestro->engine()->newProcess($template);

  $maestro->engine()->setDebug(TRUE);
  $var = $maestro->engine()->getProcessVariable('var1');

  if ($newprocess > 0) {
    drupal_set_message("New Process Code Success! - Process ID: $newprocess");
  } else {
    drupal_set_message("New Process Code FAIL! - Template: $template not defined");
  }
  drupal_goto($base_url);
}
