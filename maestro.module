<?php
// $Id$

/**
 * @file
 * maestro.module
 */

include_once './' . drupal_get_path('module', 'maestro') . '/maestro.class.php';
include_once './' . drupal_get_path('module', 'maestro') . '/maestro_tasks.class.php';

function maestro_menu() {
  $items = array();

  $items['maestro/taskconsole'] = array(
    'title' => 'Task Console',
    'page callback' => 'maestro_taskconsole',
    'access callback' => 'user_access',
    'access arguments' => array('maestro taskconsole'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['maestro/cleanqueue'] = array(
    'title' => 'Maestro CleanQueue',
    'page callback' => 'maestro_cleanqueue',
    'access callback' => TRUE,
  );

  $items['maestro/test'] = array(
    'title' => 'Maestro Test Workflow',
    'page callback' => 'maestro_enginetest',
    'access callback' => TRUE,
  );

  $items['admin/structure/maestro'] = array(
    'title' => 'Maestro Workflows',
    'description' => 'Define and administer workflows.',
    'page callback' => 'maestro_admin',
    'access arguments' => array('maestro admin'),
  //'type' => MENU_LOCAL_TASK,
    'file' => 'maestro.admin.inc'
    );

    $items['admin/structure/maestro/ajax'] = array(
    'page callback' => 'maestro_handle_ajax_request',
    'type' => MENU_CALLBACK,
    'access arguments' => array('maestro admin'),
    'file' => 'maestro.admin.inc'
    );

    $items['admin/structure/maestro/structure_ajax'] = array(
    'page callback' => 'maestro_handle_structure_ajax_request',
    'type' => MENU_CALLBACK,
    'access arguments' => array('maestro admin'),
    'file' => 'maestro.admin.inc'
    );

    $items['admin/structure/maestro/new'] = array(
    'title' => 'New',
    'type' => MENU_LOCAL_TASK,
    );

    $items['admin/structure/maestro/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'maestro_edit_workflow',
    'access arguments' => array('maestro admin'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'maestro.admin.inc'
    );

    $items['admin/structure/maestro/edit_properties'] = array(
    'title' => 'Edit Template Name and Variables',
    'page callback' => 'maestro_edit_properties',
    'access arguments' => array('maestro admin'),
    'type' => MENU_CALLBACK,
    'file' => 'maestro.admin.inc'
    );

    $items['maestro_enginetest'] = array(
    'title' => 'Execute Development Test',
    'page callback' => 'maestro_enginetest',
    'page arguments' => array(),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file'  => 'lib-test.php',
    );

    $items['maestro_runengine'] = array(
    'title' => 'Execute Development Test',
    'page callback' => 'maestro_runengine',
    'page arguments' => array(),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'file'  => 'lib-test.php',
    );

    $items['admin/config/workflow/maestro_configure'] = array(
    'title' => 'Maestro Config',
    'description' => 'Configure the Maestro Engine.',
    'page callback' => 'maestro_configure',
    'access arguments' => array('maestro admin'),
    'file' => 'maestro.admin.inc'
    );

    return $items;
}


function maestro_permission() {
  return array(
    'maestro taskconsole'  => array(
      'title' => t('Access Maestro Task Console')
  ),
    'maestro admin' => array(
      'title' => t('Administer Maestro workflows')
  )
  );
}

function maestro_help($path, $arg) {
  $output = '';

  switch ($path) {
    case "admin/help#maestro":
      $output = '<p>' . t("Define and administer workflows.") .'</p>';
      break;
  }
  return $output;
}

function maestro_theme() {
  return array(
    'maestro_taskconsole' => array(
      'template' => 'theme/maestro-taskconsole',
      'variables' => array('tasks' => NULL),
    ),
    'maestro_workflow_list' => array(
      'template' => 'theme/structure/maestro-workflow-list',
      'variables' => array('tid' => NULL, 'operation' => NULL, 'edit_var' => 0)
    ),
    'maestro_workflow_list_item' => array(
      'template' => 'theme/structure/maestro-workflow-list-item',
      //'render element' => 'maestro_workflow_template',
      'variables' => array('rec' => NULL, 'cntr' => NULL, 'tid' => NULL, 'operation' => NULL, 'edit_var' => 0)
    ),
    'maestro_workflow_edit_template_variables_list' => array(
      'template' => 'theme/structure/maestro-workflow-edit-template-variables-list',
      'variables' => array('id' => NULL, 'tid' => NULL, 'variable_name' => NULL, 'variable_name' => NULL, 'edit_var' => 0, 'cntr' => 0)
    ),

    'maestro_workflow_edit_template_variables' => array(
      'template' => 'theme/structure/maestro-workflow-edit-template-variables',
      'variables' => array('tid' => NULL, 'edit_var' => 0, 'cntr' => 0)
    ),

    'maestro_workflow_edit' => array(
      'template' => 'theme/structure/maestro-workflow-edit',
      'variables' => array('tid' => NULL, 'mi' => NULL, 'maestro_url' => NULL)
    ),
    'maestro_workflow_edit_tasks_frame' => array(
      'template' => 'theme/structure/maestro-workflow-edit-tasks-frame',
      'variables' => array('form' => NULL)
    ),
    'maestro_task_start' => array(
      'template' => 'theme/structure/tasks/maestro-task-start',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_end' => array(
      'template' => 'theme/structure/tasks/maestro-task-end',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_if' => array(
      'template' => 'theme/structure/tasks/maestro-task-if',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_batch' => array(
      'template' => 'theme/structure/tasks/maestro-task-batch',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_set_process_variable' => array(
      'template' => 'theme/structure/tasks/maestro-task-set-process-variable',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_interactive_function' => array(
      'template' => 'theme/structure/tasks/maestro-task-interactive-function',
      'variables' => array('tdid' => NULL)
    ),
    'maestro_task_interactive_function_edit' => array(
      'template' => 'theme/structure/tasks/maestro-task-interactive-function-edit',
      'variables' => array('form' => NULL)
    ),
  );
}


/**
 * Display of the Task Console - called from hook_menu callback.
 */
function maestro_taskconsole() {
  global $base_url, $base_path, $user;

  $modulepath = drupal_get_path('module', 'maestro');
  drupal_set_breadcrumb('');
  return theme('maestro_taskconsole');

}


function maestro_block_info() {
  $blocks['maestro']['info'] = t('Maestro Task Console');
  $blocks['maestro']['cache'] = DRUPAL_NO_CACHE;
  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function maestro_block_view($delta = '') {
  global $user;

  $maestro = Maestro::createMaestroObject(1);    // Initiate the processing of all tasks of type 1.x
  $maestro->engine()->setDebug(TRUE);
  $block = array();
  if (user_access('access content')) {
    $maestro->engine()->getQueue();
    $block['subject'] = t('Maestro Task Listing Block');
    $tasks = $maestro->engine()->_userTaskList;
    $numtasks = count($tasks['id']);
    $content = '<table><tr><th>ID</th><th>Template</th><th>Taskname</th><th>Tasktype</th></tr>';
    for ($i=0;$i<$numtasks;$i++) {
      $content .= '<tr><td>' . $tasks['id'][$i] . '</td>';
      $content .= '<td>' . $tasks['template'][$i] . '</td>';
      $content .= '<td>' . $tasks['taskname'][$i] . '</td>';
      $content .= '<td>' . $tasks['tasktype'][$i] . '</td>';
      $content .= '</tr>';
    }
    $content .= '</table>';
    $block['content'] = $content;
  }
  return $block;

}


function maestro_cleanqueue() {
  global $base_url;
  $maestro = Maestro::createMaestroObject(1);    // Initiate the processing of all tasks of type 1.x
  $maestro->engine()->cleanQueue();
  $maestro->engine()->setProcessVariable('initiator',1);
  drupal_set_message("Maestro Clean Queue Completed");
  drupal_goto($base_url);
}

function maestro_enginetest() {
  global $base_url;
  $options = array('color1' => 'red');    // Example array for options - structure TBD.
  $maestro = Maestro::createMaestroObject(1,$options);    // Initiate the processing of all tasks of type 1.x
  $template = 1;
  $newprocess = $maestro->engine()->newProcess($template);

  $maestro->engine()->setDebug(TRUE);
  $var = $maestro->engine()->getProcessVariable('var1');

  if ($newprocess > 0) {
    drupal_set_message("New Process Code Success! - Process ID: $newprocess");
  } else {
    drupal_set_message("New Process Code FAIL! - Template: $template not defined");
  }
  drupal_goto($base_url);
}

function template_preprocess_maestro_taskconsole(&$variables) {
  $maestro = Maestro::createMaestroObject(1);    // Initiate the processing of all tasks of type 1.x
  $variables['tasks'] = $maestro->engine()->getQueue();
  $variables['taskcount'] = $maestro->engine()->getUserTaskCount();
}



function template_preprocess_maestro_workflow_edit(&$variables) {
  global $base_url;
  $mi = new MaestroInterface($variables['tid']);

  $variables['additional_js'] = $mi->initializeJavascriptArrays();
  $variables['ajax_url'] = url('admin/structure/maestro/ajax/');
}

function template_preprocess_maestro_workflow_list(&$variables) {
  $query = db_select('maestro_template', 'a');
  $query->addExpression('COUNT(a.id)','templateCount');
  $queryNumRows = $query->countQuery()->execute()->fetchField();
  $variables['num_records'] = intval($queryNumRows);
  $output="";

  $res = db_query("SELECT id, template_name FROM {maestro_template}");
  $cntr=0;
  foreach ($res as $rec) {

    $output .= theme('maestro_workflow_list_item', array( 'rec' => $rec,
                                                          'cntr' => $cntr,
                                                          'operation' => $variables['operation'],
                                                          'tid' => $variables['tid'],
                                                          'edit_var' => $variables['edit_var']
    ));
    $cntr++;
  }

  $variables['workflow_list'] = $output;

  $variables['error_message'] = '';
  $variables['ajax_url']=url('admin/structure/maestro/structure_ajax');

  //app group listing:
  $variables['app_groups'] = maestro_createAppGroupDropDown('deleteAppGroup');

}

function template_preprocess_maestro_workflow_list_item(&$variables) {
  global $base_url;
  $output="";

  $variables['module_path']=$base_url . "/" . drupal_get_path('module', 'maestro');
  $variables['use_project'] = "";
  if(  $variables['operation'] == 'edit' && $variables['tid'] ==  $variables['rec']->id ) {  //only show this when we're editing a specific template.
    $variables['show_item'] = '';
    $output=theme('maestro_workflow_edit_template_variables',  array('tid' => $variables['tid'], 'edit_var' => $variables['edit_var'] , 'cntr' => $variables['cntr']));
    $query = db_select('maestro_template', 'a');
    $query->fields('a',array('template_name','use_project','app_group'));
    $query->condition('a.id',$variables['tid'],'=');
    $res=current($query->execute()->fetchAll());
    if($res) {
      if($res->use_project == 1)  $variables['use_project'] = ' checked="true" ';
    }
    $variables['template_app_groups'] = maestro_createAppGroupDropDown('appGroup', $res->app_group);
  }
  else {
    $variables['show_item'] = 'none';
    $variables['template_app_groups'] = "";
  }
  $variables['template_variables'] = $output;


}



function template_preprocess_maestro_workflow_edit_template_variables(&$variables) {
  global $base_url;
  $variables['module_path']=$base_url . "/" . drupal_get_path('module', 'maestro');
  $output="";
  $res = db_query("SELECT id, variable_name, variable_value FROM {maestro_template_variables} WHERE template_id=:tid", array('tid' => $variables['tid']));
  foreach ($res as $rec) {
    $output .= theme('maestro_workflow_edit_template_variables_list', array( 'var_id' => $rec->id,
                                                                        'tid' => $variables['tid'],
                                                                        'variable_name' => $rec->variable_name,
                                                                        'variable_value' => $rec->variable_value,
                                                                        'edit_var' => $variables['edit_var'],
                                                                        'cntr' => $variables['cntr']
    ));
  }
  $variables['template_variables'] = $output;
}

function template_preprocess_maestro_workflow_edit_template_variables_list(&$variables) {
  global $base_url;
  $variables['module_path' ] = $base_url . "/" . drupal_get_path('module', 'maestro');
  if($variables['var_id'] == $variables['edit_var']) {
    $variables['show_variable_actions'] = 'none';
    $variables['show_variable_edit_actions'] = '';
  }
  else {
    $variables['show_variable_actions'] = '';
    $variables['show_variable_edit_actions'] = 'none';
  }


}


function maestro_createAppGroupDropDown($name, $selected = 0){
  $res = db_query("SELECT id, app_group FROM {maestro_app_groups}");
  $output = "<select class='form-select' id='{$name}' name='{$name}' size='4' style='width:150px;'>";
  $output .= "<option value='0'>" . t('N/A') . "</option>";
  foreach ($res as $rec) {
    $sel = "";
    if($selected == $rec->id) $sel = " selected ";
    $output .= "<option value='{$rec->id}' {$sel}>{$rec->app_group}</option>";
  }
  $output .= "</select>";
  return $output;
}

function maestro_maestro_context_menu() {
  $options = array(
    array('display_name' => 'If Task',
      'class_name' => 'MaestroTaskInterfaceIf',
      'file_location' => ''
    ),
    array('display_name' => 'Batch Task',
      'class_name' => 'MaestroTaskInterfaceBatch',
      'file_location' => ''
    ),
    array('display_name' => 'Interactive Task',
      'class_name' => 'MaestroTaskInterfaceInteractiveFunction',
      'file_location' => ''
    ),
    array('display_name' => 'Set Process Variable Task',
      'class_name' => 'MaestroTaskInterfaceSetProcessVariable',
      'file_location' => ''
    ),
  );
  return $options;
}